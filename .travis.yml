# 声明构建语言环境
language: node_js # 升级版本需要依赖 npm
node_js: stable

# 无需安装依赖，调过安装
install: true 

# 只发布 pic-go 分支
branches:
  only:
  - pic-go 

# 配置 travis git 信息
before_script:
- git config --global user.name "travis" 
- git config --global user.email "travis@kingluo.me"

script:
# - git push -f git@github.com:xyyxlq/cdn.git `npm version patch -m "%s [ci skip]"` # 打 Tag，发布到 Github Release, 使用 [ci skip] 调过 CI， 防止死循环
# - git push -f git@github.com:xyyxlq/cdn.git HEAD:pic-go #将新版本文件推送回 Github
- git push -f https://${GITHUB_PWD}@github.com/xyyxlq/cdn.git `npm version patch -m "%s [ci skip]"` # 打 Tag，发布到 Github Release, 使用 [ci skip] 调过 CI， 防止死循环
- git push -f https://${GITHUB_PWD}@github.com/xyyxlq/cdn.git HEAD:pic-go #将新版本文件推送回 Github

# # 部署
# deploy:
#   # 部署到GitHub Release。
#   provider: releases
#   # Github token
#   api_key: 
#     secure: ${GITHUB_TOKEN}
#   # 部署文件路径；对于Android就部署生成的 apk 文件
#   # file: "FILE TO UPLOAD"
#   # 避免 Travis CI在部署之前清空生成的APK文件
#   skip_cleanup: true
#   # 发布时机
#   # 默认发布必须要有设置branch，否则报错：Skipping a deployment with the releases provider because this branch is not permitted: pic-go
#   on:
#     branch:
#       only:
#       - pic-go
#     # tags设置为true表示只有在有tag的情况下才部署
#     tags: true

